package ventana;

import java.awt.Canvas;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.io.IOException;
import java.util.HashMap;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

import classes.Enemigos;
import classes.JefeFinal;
import classes.PersonajePrincipal;

public class VentanaJuego extends Canvas implements KeyListener{
	private JFrame ventana;
	private BufferStrategy dobleBuffer;
	private Graphics2D g2D;
	
	
	private boolean jugando  = false;

	
	int lastFpsTime;
	int fps;
	
	private HashMap<String,BufferedImage> imagenesPersonajes = new HashMap<String,BufferedImage>();
	private HashMap<String,BufferedImage> fondos = new HashMap<String,BufferedImage>();
	private PersonajePrincipal personajePp;
	private Enemigos enemigos;
	private JefeFinal jefeFinal;
	
	
	public VentanaJuego(){
		
		cargarImagenes();
		inicializarObjetosJuego();
		
		ventana = new JFrame();
		ventana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
		ventana.setSize(800, 700); 
		ventana.setLocationRelativeTo(null);  
		ventana.setTitle("Juego Beta");
		ventana.getContentPane().add(this); 
		ventana.setResizable(false);
		ventana.setVisible(true); 
		
		createBufferStrategy(2); 
		dobleBuffer = getBufferStrategy(); 
		
		jugando = true;	
		
		this.requestFocus();
		this.addKeyListener(this); 
		
		cicloPrincipal();
		
	}
	
	
	public void cargarImagenes(){
		try {
			imagenesPersonajes.put("pp1", ImageIO.read(getClass().getResource("/recursos/1.png")));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		/*try {
			fondos.put("fondo_bosque1", ImageIO.read(getClass().getResource("/recursos/fondo_bosque.png")));
		} catch (IOException e) {
			e.printStackTrace();
		}*/
	}
	
 	public void inicializarObjetosJuego(){
		personajePp = new PersonajePrincipal(200, 200, 117, 88, "/recursos/1.png", "Carlos", 200);
	}
 	
 	
    private void pintarPp(){
    	g2D = (Graphics2D)dobleBuffer.getDrawGraphics();
    	
    	
    	
    	//g2D.drawImage(ImageIO.read(getClass().getResource("/recursos/fondo_bosque.png"),0,0,this));
    	
    	personajePp.pintarLlavesPp(g2D, imagenesPersonajes.get(personajePp.getLlaveImagenPp()), this);
    	
    	
    	dobleBuffer.show();
 	}
    
 	
 	public void cicloPrincipal(){
       
 	   long lastLoopTime = System.nanoTime(); 
        final int TARGET_FPS = 60;
        final long OPTIMAL_TIME = 1000000000 / TARGET_FPS;
        
        while (jugando){
     	  
     	   long now = System.nanoTime();
     	   long updateLength = now - lastLoopTime;
     	   lastLoopTime = now;
     	   double delta = updateLength / ((double)OPTIMAL_TIME);
     	   lastFpsTime += updateLength;
     	   fps++;
     	   if (lastFpsTime >= 1000000000){
     		   System.out.println("(FPS: "+fps+")");
     		   lastFpsTime = 0;
     		   fps = 0;
     	   }
     	  
     	   pintarPp();    	   
     	   actualizar();
     	   
     	   try{Thread.sleep((lastLoopTime-System.nanoTime() + OPTIMAL_TIME)/1000000 );}
     	   catch(Exception e){};
        }
    }
 	
 	public void actualizar(){
 		
 	}
 	
 	
 	
 	
 	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}


	public static void main(String[] args) {
		new VentanaJuego();
	}
}
